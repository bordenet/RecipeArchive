// Mocks generated by Mockito 5.4.6 from annotations
// in recipe_archive_fresh/test/home_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:recipe_archive_fresh/models/recipe.dart' as _i6;
import 'package:recipe_archive_fresh/services/auth_service.dart' as _i2;
import 'package:recipe_archive_fresh/services/recipe_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthUser_0 extends _i1.SmartFake implements _i2.AuthUser {
  _FakeAuthUser_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [RecipeService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRecipeService extends _i1.Mock implements _i3.RecipeService {
  @override
  String get apiUrl =>
      (super.noSuchMethod(
            Invocation.getter(#apiUrl),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#apiUrl),
            ),
            returnValueForMissingStub: _i4.dummyValue<String>(
              this,
              Invocation.getter(#apiUrl),
            ),
          )
          as String);

  @override
  _i5.Future<List<_i6.Recipe>> getRecipes({int? limit, String? search}) =>
      (super.noSuchMethod(
            Invocation.method(#getRecipes, [], {
              #limit: limit,
              #search: search,
            }),
            returnValue: _i5.Future<List<_i6.Recipe>>.value(<_i6.Recipe>[]),
            returnValueForMissingStub: _i5.Future<List<_i6.Recipe>>.value(
              <_i6.Recipe>[],
            ),
          )
          as _i5.Future<List<_i6.Recipe>>);

  @override
  _i5.Future<_i6.Recipe?> getRecipe(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getRecipe, [id]),
            returnValue: _i5.Future<_i6.Recipe?>.value(),
            returnValueForMissingStub: _i5.Future<_i6.Recipe?>.value(),
          )
          as _i5.Future<_i6.Recipe?>);

  @override
  _i5.Future<void> deleteRecipe(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteRecipe, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}

/// A class which mocks [AuthenticationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationService extends _i1.Mock
    implements _i2.AuthenticationService {
  @override
  _i5.Future<bool> isAuthenticated() =>
      (super.noSuchMethod(
            Invocation.method(#isAuthenticated, []),
            returnValue: _i5.Future<bool>.value(false),
            returnValueForMissingStub: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<_i2.AuthUser> signIn(String? email, String? password) =>
      (super.noSuchMethod(
            Invocation.method(#signIn, [email, password]),
            returnValue: _i5.Future<_i2.AuthUser>.value(
              _FakeAuthUser_0(
                this,
                Invocation.method(#signIn, [email, password]),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i2.AuthUser>.value(
              _FakeAuthUser_0(
                this,
                Invocation.method(#signIn, [email, password]),
              ),
            ),
          )
          as _i5.Future<_i2.AuthUser>);

  @override
  _i5.Future<void> signUp(
    String? email,
    String? password, {
    String? username,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #signUp,
              [email, password],
              {#username: username},
            ),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> confirmSignUp(String? email, String? confirmationCode) =>
      (super.noSuchMethod(
            Invocation.method(#confirmSignUp, [email, confirmationCode]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> resendConfirmationCode(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#resendConfirmationCode, [email]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> resetPassword(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#resetPassword, [email]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}
