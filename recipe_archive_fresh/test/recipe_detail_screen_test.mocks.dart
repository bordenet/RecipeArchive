// Mocks generated by Mockito 5.4.6 from annotations
// in recipe_archive_fresh/test/recipe_detail_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;
import 'package:recipe_archive_fresh/models/recipe.dart' as _i5;
import 'package:recipe_archive_fresh/services/recipe_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [RecipeService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRecipeService extends _i1.Mock implements _i2.RecipeService {
  @override
  String get apiUrl =>
      (super.noSuchMethod(
            Invocation.getter(#apiUrl),
            returnValue: _i3.dummyValue<String>(
              this,
              Invocation.getter(#apiUrl),
            ),
            returnValueForMissingStub: _i3.dummyValue<String>(
              this,
              Invocation.getter(#apiUrl),
            ),
          )
          as String);

  @override
  _i4.Future<List<_i5.Recipe>> getRecipes({int? limit, String? search}) =>
      (super.noSuchMethod(
            Invocation.method(#getRecipes, [], {
              #limit: limit,
              #search: search,
            }),
            returnValue: _i4.Future<List<_i5.Recipe>>.value(<_i5.Recipe>[]),
            returnValueForMissingStub: _i4.Future<List<_i5.Recipe>>.value(
              <_i5.Recipe>[],
            ),
          )
          as _i4.Future<List<_i5.Recipe>>);

  @override
  _i4.Future<_i5.Recipe?> getRecipe(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getRecipe, [id]),
            returnValue: _i4.Future<_i5.Recipe?>.value(),
            returnValueForMissingStub: _i4.Future<_i5.Recipe?>.value(),
          )
          as _i4.Future<_i5.Recipe?>);

  @override
  _i4.Future<void> deleteRecipe(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteRecipe, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
